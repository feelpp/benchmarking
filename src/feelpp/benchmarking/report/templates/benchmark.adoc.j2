= Reframe Report for {{ machine_display_name }}
:page-plotly: true
:page-jupyter: true
:page-tags: toolbox, catalog
:parent-catalogs: {{machine_id}}-{{application_id}}-{{test_case_id}}
:description: Performance report for {{ machine_display_name }} on {{ session_info.time_end }}
:page-illustration: {{ machine_id }}.jpg
:author: Your Name
:revdate: {{ session_info.time_end }}

== Test Summary

* Total Tests: {{ session_info.num_cases }}
* Failures: {{ session_info.num_failures }}
* Testcases
{% set env_vars = [] %}
{% for run in runs %}
    {% for test in run.testcases %}
        ** {{ test.display_name }}
        {% if env_vars == [] and test.check_vars.env_vars %}
            {% set _ignore = env_vars.append(test.check_vars.env_vars) %}
        {% endif %}
    {% endfor %}
{% endfor %}
{% if env_vars %}
* Environment variables:
[source,json]
----
{{ env_vars[0] }}
----
{% endif %}

[%dynamic%close,python]
----
from feelpp.benchmarking.reframe.report import Report
report=Report(file_path="{{ filepath }}")
----

=== Performance by Simulation Steps

[%dynamic%raw%open,python]
----
fig=report.plotPerformanceByStep()
fig.show()
----

=== Performance by Number of Tasks

[%dynamic%raw%open,python]
----
fig=report.plotPerformanceByTask()
fig.show()
----

=== Speedup of the simulation Steps

.Speedup
[%dynamic%raw%open,python]
----
fig=report.plotSpeedup()
fig.show()
----

=== Speedup for partial performances

[%dynamic%raw%open,python]
----
if report.partial:
    for name, value in report.partialDict.items():
        if value != []:
            fig = report.plotPartialSpeedup(key=name)
            fig.show()
else:
    print("Performances of each part inside an execution step have not been recorded yet.")
----