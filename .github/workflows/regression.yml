name: Regression tests

on:
  push: #TODO: REMOVE THIS
    branches:
      - 'main'

  workflow_dispatch:
    inputs:

      machine:
        type: choice
        description: 'Machine to run the benchmark on'
        default: 'gaya'
        options:
          - 'gaya'

      application:
        type: choice
        description: 'Toolbox to benchmark'
        default: 'All'
        options:
          - 'All'
          - 'Electric'
          - 'Heat'
          - 'Heal Fluid'

      use_case:
        type: choice
        description: 'Use case to benchmark'
        default: 'All'
        options:
          - 'All'

  repository_dispatch:
    types: [benchmark-application]

jobs:

  build_wheel:
    runs-on: self-ubuntu-22.04
    name: Build wheel
    if:  "!contains(github.event.head_commit.message, 'wheel skip')"
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true
        submodules: 'recursive'
    - name: Create Virtual Environment
      run: |
        python3 -m venv .venv
        source .venv/bin/activate
        pip3 install -r requirements.txt
    - name: Compile
      run: |
        pip3 wheel --no-deps --wheel-dir dist .
      env:
        CXX: clang++

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: wheel-artifacts
        path: dist/*.whl

  regression_tests:
    runs-on: self-ubuntu-22.04
    name: Reframe regression tests
    needs: build_wheel
    if: "!contains(github.event.head_commit.message, 'regression skip')"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: 'recursive'

      - name: Create Virtual Environment
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install -r requirements.txt

      - name: Download wheel
        uses: actions/download-artifact@v4
        with:
          name: wheel-artifacts
          path: dist/

      - name: Install wheel
        run: |
          source .venv/bin/activate
          python3 -m pip install --force-reinstall dist/*.whl

      - name: Set inputs
        id: set-inputs
        run: | #TODO: factor
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            machine=machine=${{ github.event.inputs.machine }}
            input_application=${{ github.event.inputs.application }}
            config_dir="src/feelpp/benchmarking/feelpp_toolboxes/config/benchConfigs/"
            if [[ input_application == "Electric" ]]; then
              config_dir+="electric/"
            elif [[ input_application == "Heat" ]]; then
              config_dir+="heat/"
            elif [[ input_application == "HeatFluid" ]]; then
              config_dir+="heatfluid/"
            fi
            input_use_case=${{ github.event.inputs.use_case }}
            if [[ input_use_case != "All" ]]; then
              echo "Use case not implemented for this toolbox"
            fi
          elif [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            machine=machine=${{ github.event.client_payload.machine }}
            input_application=${{ github.event.client_payload.application }}
            config_dir="src/feelpp/benchmarking/feelpp_toolboxes/config/benchConfigs/"
            if [[ input_application == "Electric" ]]; then
              config_dir+="electric/"
            elif [[ input_application == "Heat" ]]; then
              config_dir+="heat/"
            elif [[ input_application == "HeatFluid" ]]; then
              config_dir+="heatfluid/"
            fi
          else
            machine=gaya
            config_dir="src/feelpp/benchmarking/feelpp_toolboxes/config/benchConfigs/"
          fi

          echo "machine=$machine" >> $GITHUB_OUTPUT
          echo "config_dir=$config_dir" >> $GITHUB_OUTPUT;

      - name: Run Regression Tests
        run: | #TODO: PARAMETRIZE FEELPPDB
          source .venv/bin/activate
          benchmark-toolbox ${{ steps.set-inputs.outputs.machine }} \
          --feelppdb /data/scratch/cladellash/feelppdb/ \
          --dir ${{ steps.set-inputs.outputs.config_dir }}
        env:
          GIRDER_API_KEY : ${{ secrets.GIRDER }}

  update_benchmarks:
    runs-on: self-ubuntu-22.04
    name: Generate benchmarks
    needs: regression_tests
    if: "!contains(github.event.head_commit.message, 'benchmarks skip')"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: 'recursive'

      - name: Create Virtual Environment
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install -r requirements.txt

      - name: Download wheel
        uses: actions/download-artifact@v4
        with:
          name: wheel-artifacts
          path: dist/

      - name: Install wheel
        run: |
          source .venv/bin/activate
          python3 -m pip install --force-reinstall dist/*.whl

      - name: Update benchmarks
        run: |
          source .venv/bin/activate
          render-benchmarks \
            --config_file ./src/feelpp/benchmarking/report/config.json \
            --json_output_path reports \
            --modules_path ./docs/modules/ROOT/pages
        env:
          GIRDER_API_KEY: ${{ secrets.GIRDER }}


      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          title: "Add new benchmarks"
          body: |
            Add new benchmarks

            Auto-generated by [create-pull-request][1]
            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            enhancement
            documentation
          reviewers: JavierCladellas
        env:
          GITHUB_TOKEN: ${{ secrets.CR_PAT }}