[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
'feelpp.benchmarking' = ['report/templates/**','report/figures/templates/**','scripts/data/*','scripts/data/website_images/*']

[project]
name = "feelpp-benchmarking"
version = "3.0.3"
description="The Feel++ Benchmarking Project"
readme = "README.md"
authors = [
  { name = "Christophe Prud'homme", email = "christophe.prudhomme@cemosis.fr" },
  { name = "Vincent Chabannes", email = "vincent.chabannes@cemosis.fr" },
  { name = "Javier Cladellas", email = "javier.cladellas@cemosis.fr" },
]
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

dependencies = [
  "setuptools==66.1.1",
  "traitlets",
  "tabulate",
  "girder-client",
  "pydantic",
  "ReFrame-HPC==4.6.3",
  "plotly",
  "Jinja2",
  "numpy",
  "pandas",
  "IPython"
]

[project.urls]
Homepage = "https://github.com/feelpp/benchmarking"
Issues = "https://github.com/feelpp/benchmarking/issues"

[project.optional-dependencies]
test = ["pytest"]

[project.scripts]
feelpp-benchmarking-render = "feelpp.benchmarking.report.__main__:main_cli"
feelpp-benchmarking-exec = "feelpp.benchmarking.reframe.__main__:main_cli"
feelpp-girder = "feelpp.benchmarking.scripts.girder:main_cli"
merge-json-configs = "feelpp.benchmarking.scripts.misc:jsonConfigMerge_cli"
update-stage-config = "feelpp.benchmarking.scripts.misc:updateStageConfig_cli"
feelpp-antora = "feelpp.benchmarking.scripts.antora:main_cli"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
  "ignore:(ast.Str|Attribute s|ast.NameConstant|ast.Num) is deprecated:DeprecationWarning:_pytest",  # Python 3.12
]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "PLR",    # Design related pylint codes
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20"]
