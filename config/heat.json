{
    "executable": "feelpp_toolbox_heat",
    "output_directory":"/data/scratch/cladellash/feelppdb/toolboxes/heat",
    "use_case_name":"building",
    "options": [
        "--config-files /usr/share/feelpp/data/testcases/toolboxes/heat/cases/Building/ThermalBridgesENISO10211/case2.cfg",
        "--directory {{output_directory}}/{{instance}}",
        "--repository.case {{use_case_name}}",
        "--fail-on-unknown-option 1",
        "--heat.scalability-save=1",
        "--repository.append.np 0",
        "--heat.json.patch='{\"op\": \"replace\",\"path\": \"/Meshes/heat/Import/hsize\",\"value\": {{parameters.discretization.value}} }'"
    ],
    "outputs": [
        {
            "instance_path": "{{output_directory}}/{{use_case_name}}/",
            "relative_filepath": "heat.measures/values.csv",
            "format": "csv"
        }
    ],
    "scalability": {
        "directory": "{{output_directory}}/{{instance}}/{{use_case_name}}",
        "stages": [
            {
                "name": "HeatConstructor",
                "file": "heat.scalibility.HeatConstructor.data",
                "format": "tsv"
            },
            {
                "name": "HeatPostProcessing",
                "file": "heat.scalibility.HeatPostProcessing.data",
                "format": "tsv"
            },
            {
                "name": "HeatSolve",
                "file": "heat.scalibility.HeatSolve.data",
                "format": "tsv"
            }
        ]
    },
    "sanity": {
        "success": [
        ],
        "error": [
        ]
    },
    "upload":{
        "active":false,
        "platform":"girder",
        "folder_id":"66ffd846b0e95728eb010353"
    },
    "parameters": {
        "nb_tasks": {
            "active": true,
            "type": "continuous",
            "topology": {
                "min_cores_per_node": 8,
                "max_cores_per_node": 16,
                "min_nodes": 1,
                "max_nodes": 1
            },
            "sequencing": {
                "generator": "default",
                "sequence": []
            }
        },
        "discretization": {
            "active": true,
            "type": "continuous",
            "hsize_range": {
                "min": 0.05,
                "max": 0.5
            },
            "sequencing": {
                "generator": "n_steps",
                "n_steps":3,
                "sequence": []
            }
        },
        "solvers": {
            "active": false,
            "type": "discrete"
        }
    }
}